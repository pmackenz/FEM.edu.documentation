
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/trusses/plot_truss04.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_trusses_plot_truss04.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_trusses_plot_truss04.py:


=================================================================
3d truss example demonstrating large deformation analysis.
=================================================================

The system is statically determined and allows for easy validation of
calculated deformation, reactions and internal forces.

Author: Tatsu Sweet

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Setup

.. GENERATED FROM PYTHON SOURCE LINES 14-72

.. code-block:: default


    from femedu.examples.Example import *

    from femedu.domain.System import *
    from femedu.domain.Node import *
    from femedu.elements.linear.Truss import *
    from femedu.materials.FiberMaterial import *


    class ExampleTruss04(Example):

        def problem(self):

            # initialize a system model
            params = {'E': 2100., 'A': 1., 'nu': 0.0, 'fy': 1.e30}

            model = System()

            # create nodes
            H = 5
            nd1 = Node(0.0, 5.0, 0.0)
            nd2 = Node(9.5, 5.0, 0.0)
            nd3 = Node(0.0, 0.0, 0.0)
            nd4 = Node(9.5, 0.0, 0.0)
            nd5 = Node(5.5, 3.75, H)
            nd6 = Node(5.5, 1.25, H)

            nodeList = [nd1, nd2, nd3, nd4, nd5, nd6]
            model.addNode(*nodeList)


            # create elements
            model.addElement(Truss(nd1, nd5, FiberMaterial(params)))  # bottom 1
            model.addElement(Truss(nd1, nd6, FiberMaterial(params)))  # up right diag 1
            model.addElement(Truss(nd2, nd5, FiberMaterial(params)))  # up left diag 1
            model.addElement(Truss(nd3, nd6, FiberMaterial(params)))  # bottom 1
            model.addElement(Truss(nd4, nd5, FiberMaterial(params)))  # up right diag 1
            model.addElement(Truss(nd4, nd6, FiberMaterial(params)))  # up left diag 1
            model.addElement(Truss(nd5, nd6, FiberMaterial(params)))  # bottom 1


            # define support(s)
            translation_dofs = ('ux', 'uy', 'uz')
            for node in [nd1, nd2, nd3, nd4]:
                node.fixDOF(*translation_dofs)

            # add loads
            nd5.setLoad((-100.0,), ('uz',))

            # analyze the model
            model.solve()

            # write out report
            model.report()

            # create plots
            model.plot(factor=1.)








.. GENERATED FROM PYTHON SOURCE LINES 83-85

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 85-90

.. code-block:: default


    if __name__ == "__main__":
        ex = ExampleTruss04()
        ex.run()




.. image-sg:: /auto_examples/trusses/images/sphx_glr_plot_truss04_001.png
   :alt: Deformed System (magnification=1.00)
   :srcset: /auto_examples/trusses/images/sphx_glr_plot_truss04_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_27:
          x:    [0. 5. 0.]
          fix:  ['ux', 'uy', 'uz']
          u:    [0. 0. 0.]
      Node_28:
          x:    [9.5 5.  0. ]
          fix:  ['ux', 'uy', 'uz']
          u:    [0. 0. 0.]
      Node_29:
          x:    [0. 0. 0.]
          fix:  ['ux', 'uy', 'uz']
          u:    [0. 0. 0.]
      Node_30:
          x:    [9.5 0.  0. ]
          fix:  ['ux', 'uy', 'uz']
          u:    [0. 0. 0.]
      Node_31:
          x:    [5.5  3.75 5.  ]
          P:    [   0.    0. -100.]
          u:    [-0.08746953 -0.01252906 -0.2503495 ]
      Node_32:
          x:    [5.5  1.25 5.  ]
          u:    [-0.00264455 -0.01179569  0.00083329]

    Elements:
    ---------------------
      Truss: Node_27 to Node_31:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.030225189837957574   stress:{'xx': -63.47289865971091, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: -63.47289865971091
      Truss: Node_27 to Node_32:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:0.0004884440295917132   stress:{'xx': 1.0257324621425976, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: 1.0257324621425976
      Truss: Node_28 to Node_31:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.020821334755632026   stress:{'xx': -43.72480298682726, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: -43.72480298682726
      Truss: Node_29 to Node_32:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.00044221245864870754   stress:{'xx': -0.9286461631622859, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: -0.9286461631622859
      Truss: Node_30 to Node_31:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.01723229689893104   stress:{'xx': -36.18782348775518, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: -36.18782348775518
      Truss: Node_30 to Node_32:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:1.6618687008980175e-20   stress:{'xx': 3.489924271885837e-17, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: 3.489924271885837e-17
      Truss: Node_31 to Node_32:
          material properties: FiberMaterial(Material)({'E': 2100.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.00029334522821977335   stress:{'xx': -0.616024979261524, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
          internal force: -0.616024979261524






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.085 seconds)


.. _sphx_glr_download_auto_examples_trusses_plot_truss04.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_truss04.py <plot_truss04.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_truss04.ipynb <plot_truss04.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/trusses/plot_truss01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_trusses_plot_truss01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_trusses_plot_truss01.py:


==========================
Simple triangular truss.
==========================

The system is statically determined and allows for easy validation of
calculated deformation, reactions and internal forces.

Author: Peter Mackenzie-Helnwein

.. GENERATED FROM PYTHON SOURCE LINES 14-15

Setup

.. GENERATED FROM PYTHON SOURCE LINES 15-23

.. code-block:: default


    from femedu.examples.Example import *

    from femedu.domain.System import *
    from femedu.domain.Node import *
    from femedu.elements.Truss import *
    from femedu.materials.FiberMaterial import *








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Create the example by subclassing the :py:class:`Example`

.. GENERATED FROM PYTHON SOURCE LINES 25-66

.. code-block:: default


    class ExampleTruss01(Example):

        def problem(self):
            # initialize a system model
            B = 6.0 * 12
            H = 3.0 * 12
            params = {'E': 10., 'A': 1., 'nu': 0.0, 'fy': 1.e30}

            model = System()

            # create nodes
            nd0 = Node(0.0, 0.0)
            nd1 = Node(  B, 0.0)
            nd2 = Node(0.5*B, H)

            model.addNode(nd0, nd1, nd2)

            # create elements
            model.addElement(Truss(nd0, nd1, FiberMaterial(params)))  # bottom 1
            model.addElement(Truss(nd0, nd2, FiberMaterial(params)))  # up right diag 1
            model.addElement(Truss(nd1, nd2, FiberMaterial(params)))  # up left diag 1

            # define support(s)
            nd0.fixDOF('ux', 'uy')    # pin support left end
            nd1.fixDOF('uy')            # roller support right end

            # add loads
            # .. load only the upper nodes
            nd2.setLoad([0.0, -1.0], ('ux', 'uy'))

            # analyze the model
            model.solve()

            # write out report
            model.report()

            # create plots
            model.plot(factor=1., filename="truss01_deformed.png")
            model.beamValuePlot('f',filename="truss01_forces.png")








.. GENERATED FROM PYTHON SOURCE LINES 80-82

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 82-87

.. code-block:: default


    if __name__ == "__main__":
        ex = ExampleTruss01()
        ex.run()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/trusses/images/sphx_glr_plot_truss01_001.png
         :alt: Deformed System (magnification=1.00)
         :srcset: /auto_examples/trusses/images/sphx_glr_plot_truss01_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/trusses/images/sphx_glr_plot_truss01_002.png
         :alt: Axial Forces
         :srcset: /auto_examples/trusses/images/sphx_glr_plot_truss01_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_0:
          x:    [0. 0.]
          fix:  ['ux', 'uy']
          u:    [0. 0.]
      Node_1:
          x:    [72.  0.]
          fix:  ['uy']
          u:    [3.6 0. ]
      Node_2:
          x:    [36. 36.]
          P:    [ 0. -1.]
          u:    [ 1.8        -6.89116882]

    Elements:
    ---------------------
      Truss: node 0 to node 1:
         material properties: FiberMaterial(Material)({'E': 10.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:0.04761904761904761   stress:{'xx': 0.4761904761904761, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
         internal force: 0.4761904761904761
         Pe: [ 0.4761904761904761 0.0 ]
      Truss: node 0 to node 2:
         material properties: FiberMaterial(Material)({'E': 10.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.05823563981487166   stress:{'xx': -0.5823563981487166, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
         internal force: -0.5823563981487166
         Pe: [ -0.46140136076020055 -0.3553136062035647 ]
      Truss: node 1 to node 2:
         material properties: FiberMaterial(Material)({'E': 10.0, 'A': 1.0, 'nu': 0.0, 'fy': 1e+30})  strain:-0.058235639814871655   stress:{'xx': -0.5823563981487165, 'yy': 0.0, 'zz': 0.0, 'xy': 0.0}  
         internal force: -0.5823563981487165
         Pe: [ 0.4614013607602005 -0.3553136062035646 ]






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.185 seconds)


.. _sphx_glr_download_auto_examples_trusses_plot_truss01.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_truss01.py <plot_truss01.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_truss01.ipynb <plot_truss01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plates/plot_plate07.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plates_plot_plate07.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plates_plot_plate07.py:


===============================================================
A square patch made of one quadrilateral plate elements
===============================================================

Basic implementation test with applied loads.
    Testing the tangent stiffness computation.

.. code::

    free   free
     ^     ^
     |     |
     3-----2 -> free
     |     | >
     |  a  | > (w = 1.0)
     |     | >
     0-----1 -> free

    width:  10.
    height: 10.

    Material parameters: St. Venant-Kirchhoff, plane stress
        E  = 10.0
        nu =  0.30
        t  =  1.0

    Element loads:
        node 0: [ 0.0, 0.0]
        node 1: [ 5.0, 0.0]
        node 2: [ 5.0, 0.0]
        node 3: [ 0.0, 0.0]

Author: Peter Mackenzie-Helnwein

.. GENERATED FROM PYTHON SOURCE LINES 36-125

.. code-block:: default

    import numpy as np

    from femedu.examples.Example import *

    from femedu.domain.System import *
    from femedu.solver.NewtonRaphsonSolver import *
    from femedu.elements.Quad import *
    from femedu.materials.PlaneStress import *


    class ExamplePlate07(Example):

        def problem(self):

            params = dict(
                E  = 10., # Young's modulus
                nu = 0.3,   # Poisson's ratio
                t  = 1.0,   # thickness of the plate
                fy = 1.e30  # yield stress
            )

            a = 10.     # length of the plate in the x-direction
            b = 10.     # length of the plate in the y-direction

            model = System()
            model.setSolver(NewtonRaphsonSolver())

            nd0 = Node( 0.0, 0.0)
            nd1 = Node(   a, 0.0)
            nd2 = Node(   a,   b)
            nd3 = Node( 0.0,   b)

            # nd0.fixDOF('ux', 'uy')
            # nd1.fixDOF('uy')
            # nd3.fixDOF('ux')

            model.addNode(nd0, nd1, nd2, nd3)

            elemA = Quad(nd0, nd1, nd2, nd3, PlaneStress(params))

            model.addElement(elemA)

            elemA.setSurfaceLoad(face=1, pn=1.0)

            model.plot(factor=0.0, title="Undeformed system", filename="plate07_undeformed.png", show_bc=1)

            # %%
            # We can have a quick look at the stiffness mode shapes using the
            # buckling-mode plotter.  These are simply eigenvalues and eigenvectors of Kt
            # at the current load level (0.0)
            #
            model.setLoadFactor(0.0)
            model.solve()

            np.save('../../../Kplate.npy', model.solver.Kt)

            for k in range(8):
                name = f"plate07_mode{k:2d}.png"
                model.plotBucklingMode(mode=k,filename=name,factor=1.0)

            # %%
            # Note the three rigid body modes (lam=0.0). It can be shown that all three
            # are limear combinations of translations in x and y-directions and a
            # rigid body rotation.
            #

            # %%
            # Now it is time to add boundary conditions, apply loads
            # and check the convergence behavior.
            #

            nd0.fixDOF('ux', 'uy')
            nd1.fixDOF('uy')
            nd3.fixDOF('ux')

            model.setLoadFactor(1.0)
            model.solve()

            # %%
            # The output shows that we do have a quadratic rate of convergence.

            # %%
            # Let's finish off with a nice plot of the deformed system.

            model.plot(factor=1.0, filename="plate07_deformed.png")

            model.report()









.. GENERATED FROM PYTHON SOURCE LINES 183-185

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 185-191

.. code-block:: default


    if __name__ == "__main__":
        ex = ExamplePlate07()
        ex.run()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_001.png
         :alt: Undeformed system
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_002.png
         :alt: Mode Shape for $ \lambda = -0.00 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_003.png
         :alt: Mode Shape for $ \lambda = 0.00 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_004.png
         :alt: Mode Shape for $ \lambda = 0.00 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_005.png
         :alt: Mode Shape for $ \lambda = 4.95 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_006.png
         :alt: Mode Shape for $ \lambda = 4.95 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_006.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_007.png
         :alt: Mode Shape for $ \lambda = 7.69 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_007.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_008.png
         :alt: Mode Shape for $ \lambda = 7.69 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_009.png
         :alt: Mode Shape for $ \lambda = 14.29 $
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_009.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate07_010.png
         :alt: Deformed System (magnification=1.00)
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate07_010.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    norm of the out-of-balance force:   9.3090e-16
    +
    norm of the out-of-balance force:   7.0711e+00
    norm of the out-of-balance force:   1.1554e+00
    norm of the out-of-balance force:   1.7307e-02
    norm of the out-of-balance force:   4.2408e-06
    norm of the out-of-balance force:   2.4528e-13
    +

    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_2827:
          x:    [0. 0.]
          fix:  ['ux', 'uy']
          u:    [0. 0.]
      Node_2828:
          x:    [10.  0.]
          fix:  ['uy']
          u:    [0.88033915 0.        ]
      Node_2829:
          x:    [10. 10.]
          u:    [ 0.88033915 -0.27963653]
      Node_2830:
          x:    [ 0. 10.]
          fix:  ['ux']
          u:    [ 0.         -0.27963653]

    Elements:
    ---------------------
      Quad_5189: nodes ( Node_2827 Node_2828 Node_2829 Node_2830 )
          material: list
          strain (0): xx=9.191e-02 yy=-2.757e-02 xy=3.235e-17 zz=-1.930e-02
          stress (0): xx=9.191e-01 yy=2.776e-15 xy=1.244e-16 zz=0.000e+00
          strain (1): xx=9.191e-02 yy=-2.757e-02 xy=4.153e-17 zz=-1.930e-02
          stress (1): xx=9.191e-01 yy=3.386e-15 xy=1.597e-16 zz=0.000e+00
          strain (2): xx=9.191e-02 yy=-2.757e-02 xy=1.079e-16 zz=-1.930e-02
          stress (2): xx=9.191e-01 yy=2.776e-15 xy=4.151e-16 zz=0.000e+00
          strain (3): xx=9.191e-02 yy=-2.757e-02 xy=1.229e-16 zz=-1.930e-02
          stress (3): xx=9.191e-01 yy=3.386e-15 xy=4.727e-16 zz=0.000e+00






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.014 seconds)


.. _sphx_glr_download_auto_examples_plates_plot_plate07.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_plate07.py <plot_plate07.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_plate07.ipynb <plot_plate07.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

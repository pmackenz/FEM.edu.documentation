
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plates/plot_plate11.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plates_plot_plate11.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plates_plot_plate11.py:


==========================================================
Bending a cantilever beam
==========================================================

Using PatchMesher to model the beam

.. GENERATED FROM PYTHON SOURCE LINES 9-134

.. code-block:: default

    import math
    import sys
    import numpy as np

    from femedu.examples import Example

    from femedu.domain import System, Node
    from femedu.solver import NewtonRaphsonSolver
    #from femedu.elements.linear import Quad
    from femedu.elements.finite import Quad
    from femedu.materials import PlaneStress
    from femedu.mesher import *


    class ExamplePlate11(Example):

        def problem(self):
            # ========== setting mesh parameters ==============

            Nx = 24       # number of elements in the mesh
            Ny = 8        # number of elements in the mesh
            Lx = 120.0    # length of plate in the x-direction
            Ly =  20.0    # length of plate in the y-direction

            # ========== setting material parameters ==============

            params = dict(
                E  = 20000.,    # Young's modulus
                nu = 0.250,     # Poisson's ratio
                t  = 1.00       # thickness of the plate
            )

            # ========== setting load parameters ==============

            px  =  0.0         # uniform load normal to x=Lx
            py  =  0.0         # uniform load normal to y=Ly
            pxy =  1.0         # uniform shear load on x=L

            # ========== setting analysis parameters ==============

            target_load_level = 1.00     # reference load
            max_steps = 2                # number of load steps: 2 -> [0.0, 1.0]

            # define a list of target load levels
            load_levels = np.linspace(0, target_load_level, max_steps)

            #
            # ==== Build the system model ====
            #

            model = System()
            model.setSolver(NewtonRaphsonSolver())

            # create nodes

            mesher = PatchMesher(model, (0.,0.),(Lx,0.),(Lx,Ly),(0.,Ly) )
            nodes, elements = mesher.quadMesh(Nx, Ny, Quad, PlaneStress(params))

            # define support(s)

            ## find nodes at y==0 and x==0

            for node in nodes:
                X = node.getPos()
                if math.isclose(X[0], 0.0):
                    node.fixDOF('ux','uy')    # fix left side

            # ==== complete the reference load ====

            Xo = np.array([Lx, 0.0])
            No = np.array([1.0, 0.0])

            for node in nodes:
                X = node.getPos()
                if math.isclose(X[0],Lx):
                    # locate the node at the centerline
                    if math.isclose(X[1],Ly/2.):
                        end_node = node
                    # load the end faces
                    for elem in node.elements:
                        for face in elem.faces:
                            for x, area in zip(face.pos, face.area):
                                if np.abs( (x - Xo) @ No ) < 1.0e-2 and  No @ area / np.linalg.norm(area):
                                    face.setLoad(px, -pxy)

            Xo = np.array([0.0, Ly])
            No = np.array([0.0, 1.0])

            for node in nodes:
                X = node.getPos()
                if math.isclose(X[1],Ly):
                    for elem in node.elements:
                        for face in elem.faces:
                            for x, area in zip(face.pos, face.area):
                                if np.abs( (x - Xo) @ No ) < 1.0e-2 and  No @ area / np.linalg.norm(area):
                                    face.setLoad(-py, 0.0)

            #model.report()

            # set up a recorder
            model.initRecorder(variables=['ux','uy'], nodes=[end_node])
            model.startRecorder()

            model.plot(factor=0, title="undeformed system", filename="plate11_undeformed.png", show_bc=1, show_loads=1)

            for lf in np.linspace(0.0, 100.0, 21):
            #for lf in np.linspace(0.0, 10.0, 3):

                model.setLoadFactor(lf)
                model.solve(verbose=True)

                #model.report()


            model.plot(factor=1., filename=f"plate11_deformed_lf{lf:.2f}.png", show_bc=1, show_loads=1, show_reactions=1)

            model.valuePlot('ux', filename=f"plate11_ux_lf{lf:.2f}.png")
            model.valuePlot('uy', show_mesh=True, filename=f"plate11_uy_lf{lf:.2f}.png")

            # create a history plot for the end node

            model.historyPlot('ux', node=end_node)
            model.historyPlot('uy', node=end_node)









.. GENERATED FROM PYTHON SOURCE LINES 148-150

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 150-156

.. code-block:: default


    if __name__ == "__main__":
        ex = ExamplePlate11()
        ex.run()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_001.png
         :alt: undeformed system
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_002.png
         :alt: Deformed System (magnification=1.00)
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_003.png
         :alt: Contours of 'ux'
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_004.png
         :alt: Contours of 'uy'
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_005.png
         :alt: Load History Plot
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate11_006.png
         :alt: Load History Plot
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate11_006.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    norm of the out-of-balance force:   1.2214e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   8.6391e+02
    norm of the out-of-balance force:   1.5808e+00
    norm of the out-of-balance force:   9.2108e-06
    norm of the out-of-balance force:   2.4762e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   8.5900e+02
    norm of the out-of-balance force:   1.5680e+00
    norm of the out-of-balance force:   8.5493e-04
    norm of the out-of-balance force:   2.6796e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   8.4453e+02
    norm of the out-of-balance force:   1.5300e+00
    norm of the out-of-balance force:   2.9645e-03
    norm of the out-of-balance force:   3.4270e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   8.2132e+02
    norm of the out-of-balance force:   1.4695e+00
    norm of the out-of-balance force:   5.7584e-03
    norm of the out-of-balance force:   4.6990e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   7.9059e+02
    norm of the out-of-balance force:   1.3910e+00
    norm of the out-of-balance force:   8.5518e-03
    norm of the out-of-balance force:   5.9901e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   7.5385e+02
    norm of the out-of-balance force:   1.2994e+00
    norm of the out-of-balance force:   1.0767e-02
    norm of the out-of-balance force:   6.2440e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   7.1271e+02
    norm of the out-of-balance force:   1.1997e+00
    norm of the out-of-balance force:   1.2066e-02
    norm of the out-of-balance force:   6.0261e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   6.6877e+02
    norm of the out-of-balance force:   1.0965e+00
    norm of the out-of-balance force:   1.2379e-02
    norm of the out-of-balance force:   5.1933e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   6.2348e+02
    norm of the out-of-balance force:   9.9343e-01
    norm of the out-of-balance force:   1.1843e-02
    norm of the out-of-balance force:   4.5148e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   5.7809e+02
    norm of the out-of-balance force:   8.9331e-01
    norm of the out-of-balance force:   1.0706e-02
    norm of the out-of-balance force:   3.6370e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   5.3358e+02
    norm of the out-of-balance force:   7.9813e-01
    norm of the out-of-balance force:   9.2403e-03
    norm of the out-of-balance force:   3.2042e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   4.9071e+02
    norm of the out-of-balance force:   7.0919e-01
    norm of the out-of-balance force:   7.6764e-03
    norm of the out-of-balance force:   3.2755e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   4.5001e+02
    norm of the out-of-balance force:   6.2724e-01
    norm of the out-of-balance force:   6.1802e-03
    norm of the out-of-balance force:   3.6676e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   4.1180e+02
    norm of the out-of-balance force:   5.5259e-01
    norm of the out-of-balance force:   4.8493e-03
    norm of the out-of-balance force:   3.9222e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   3.7627e+02
    norm of the out-of-balance force:   4.8527e-01
    norm of the out-of-balance force:   3.7263e-03
    norm of the out-of-balance force:   3.0984e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   3.4346e+02
    norm of the out-of-balance force:   4.2504e-01
    norm of the out-of-balance force:   2.8157e-03
    norm of the out-of-balance force:   3.8503e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   3.1335e+02
    norm of the out-of-balance force:   3.7154e-01
    norm of the out-of-balance force:   2.0995e-03
    norm of the out-of-balance force:   3.4159e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   2.8583e+02
    norm of the out-of-balance force:   3.2429e-01
    norm of the out-of-balance force:   1.5493e-03
    norm of the out-of-balance force:   3.4857e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   2.6077e+02
    norm of the out-of-balance force:   2.8277e-01
    norm of the out-of-balance force:   1.1344e-03
    norm of the out-of-balance force:   3.8875e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +
    norm of the out-of-balance force:   3.4233e+01
    norm of the out-of-balance force:   2.3801e+02
    norm of the out-of-balance force:   2.4643e-01
    norm of the out-of-balance force:   8.2582e-04
    norm of the out-of-balance force:   4.1410e-09
    Recorder.addData: 'stability' not initialized by the recorder: ignored
    +





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  9.043 seconds)


.. _sphx_glr_download_auto_examples_plates_plot_plate11.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_plate11.py <plot_plate11.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_plate11.ipynb <plot_plate11.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plates/plot_plate09.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plates_plot_plate09.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plates_plot_plate09.py:


=========================================================================
Patch test for quadrilateral plate elements under in-plane loading
=========================================================================

The patch test is an empirical minimum test which every finite element has to pass to ensure convergence with mesh refinement.

It consists of a problem for which a known homogeneous solution exists.
For plates, we commonly use a rectangular plate subject to homogeneous edge loading,
e.g., constant tension in the x-direction, or constant shear, etc.

The mesh must contain distorted elements and at least one element not attached to any node on the boundary.

Author: Peter Mackenzie-Helnwein

.. GENERATED FROM PYTHON SOURCE LINES 16-155

.. code-block:: default

    from femedu.examples.Example import *

    from femedu.domain import *
    from femedu.solver.NewtonRaphsonSolver import *
    from femedu.elements.Quad import *
    from femedu.materials.PlaneStress import *


    class ExamplePlate09(Example):

        def problem(self):
            # ========== setting mesh parameters ==============

            N = 8         # number of elements in the mesh
            Lx = 100.0    # length of plate in the x-direction
            Ly =  80.0    # length of plate in the y-direction

            # ========== setting material parameters ==============

            params = dict(
                E  = 20000.,    # Young's modulus
                nu = 0.250,     # Poisson's ratio
                t  = 1.00       # thickness of the plate
            )

            # ========== setting load parameters ==============

            px  = 10.0         # uniform load normal to x=const
            py  =  0.0         # uniform load normal to y=const
            pxy =  0.0         # uniform shear load on x=const and y=const

            # ========== setting analysis parameters ==============

            target_load_level = 1.00     # reference load
            max_steps = 2                # number of load steps: 2 -> [0.0, 1.0]

            # define a list of target load levels
            load_levels = np.linspace(0, target_load_level, max_steps)

            #
            # ==== Build the system model ====
            #

            model = System()
            model.setSolver(NewtonRaphsonSolver())

            # create nodes

            nodes = (
                Node(0.0*Lx, 0.0*Ly),  # nd 0
                Node(0.2*Lx, 0.0*Ly),  # nd 1
                Node(0.5*Lx, 0.0*Ly),  # nd 2
                Node(0.7*Lx, 0.0*Ly),  # nd 3
                Node(1.0*Lx, 0.0*Ly),  # nd 4
                #
                Node(0.0*Lx, 0.2*Ly),  # nd 5
                Node(0.15*Lx,0.3*Ly),  # nd 6
                Node(0.5*Lx, 0.2*Ly),  # nd 7
                Node(0.8*Lx, 0.3*Ly),  # nd 8
                Node(1.0*Lx, 0.2*Ly),  # nd 9
                #
                Node(0.0*Lx, 0.6*Ly),  # nd 10
                Node(0.2*Lx, 0.5*Ly),  # nd 11
                Node(0.7*Lx, 0.7*Ly),  # nd 12
                Node(0.9*Lx, 0.6*Ly),  # nd 13
                Node(1.0*Lx, 0.7*Ly),  # nd 14
                #
                Node(0.0*Lx, 1.0*Ly),  # nd 15
                Node(0.3*Lx, 1.0*Ly),  # nd 16
                Node(0.55*Lx,1.0*Ly),  # nd 17
                Node(0.8*Lx, 1.0*Ly),  # nd 18
                Node(1.0*Lx, 1.0*Ly),  # nd 19
            )

            elements = (
                Quad(nodes[0],nodes[1],nodes[6],nodes[5],PlaneStress(params)),  # elem 0
                Quad(nodes[1],nodes[2],nodes[7],nodes[6],PlaneStress(params)),  # elem 1
                Quad(nodes[2],nodes[3],nodes[8],nodes[7],PlaneStress(params)),  # elem 2
                Quad(nodes[3],nodes[4],nodes[9],nodes[8],PlaneStress(params)),  # elem 3
                #
                Quad(nodes[5],nodes[6],nodes[11],nodes[10],PlaneStress(params)),  # elem 4
                Quad(nodes[6],nodes[7],nodes[12],nodes[11],PlaneStress(params)),  # elem 5
                Quad(nodes[7],nodes[8],nodes[13],nodes[12],PlaneStress(params)),  # elem 6
                Quad(nodes[8],nodes[9],nodes[14],nodes[13],PlaneStress(params)),  # elem 7
                #
                Quad(nodes[10],nodes[11],nodes[16],nodes[15],PlaneStress(params)),  # elem 8
                Quad(nodes[11],nodes[12],nodes[17],nodes[16],PlaneStress(params)),  # elem 9
                Quad(nodes[12],nodes[13],nodes[18],nodes[17],PlaneStress(params)),  # elem 10
                Quad(nodes[13],nodes[14],nodes[19],nodes[18],PlaneStress(params)),  # elem 11
                #
            )

            model.addNode(*nodes)
            model.addElement(*elements)

            # define support(s)

            fix_x = (0,)
            fix_y = (0,4)

            for idx in fix_x:
                nodes[idx].fixDOF('ux')    # horizontal support left end
            for idx in fix_y:
                nodes[idx].fixDOF('uy')          # vertical support right end

            # ==== complete the reference load ====

            # surface loads on the left side
            elements[0].setSurfaceLoad(3,px)
            elements[4].setSurfaceLoad(3,px)
            elements[8].setSurfaceLoad(3,px)

            # surface loads on the right side
            elements[ 3].setSurfaceLoad(1,px)
            elements[ 7].setSurfaceLoad(1,px)
            elements[11].setSurfaceLoad(1,px)

            # these are only nodal forces as part of the reference load
            # .. load only the upper node

            model.plot(factor=0., title="undeformed system", filename="plate09_undeformed.png", show_bc=1)

            model.setLoadFactor(0.0)
            model.solve()

            # for k in range(25):
            #     name = f"plate08_mode{k:2d}.png"
            #     model.plotBucklingMode(mode=k,filename=name,factor=25)

            model.setLoadFactor(10.0)
            model.solve()

            model.solver.showKt(filename="plate09_spy_Kt.png")

            model.report()

            model.plot(factor=100., filename="plate09_deformed.png")









.. GENERATED FROM PYTHON SOURCE LINES 172-174

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 174-180

.. code-block:: default


    if __name__ == "__main__":
        ex = ExamplePlate09()
        ex.run()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate09_001.png
         :alt: undeformed system
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate09_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate09_002.png
         :alt: plot plate09
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate09_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate09_003.png
         :alt: Deformed System (magnification=100.00)
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate09_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    norm of the out-of-balance force:   7.6951e-10
    +
    norm of the out-of-balance force:   6.2225e+03
    norm of the out-of-balance force:   4.8343e+01
    norm of the out-of-balance force:   2.6885e-03
    norm of the out-of-balance force:   7.1925e-10
    +

    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_20:
          x:    [0. 0.]
          fix:  ['ux', 'uy']
          u:    [0. 0.]
      Node_21:
          x:    [20.  0.]
          u:    [ 9.92598389e-02 -3.93688077e-15]
      Node_22:
          x:    [50.  0.]
          u:    [ 2.48149597e-01 -2.83524536e-15]
      Node_23:
          x:    [70.  0.]
          u:    [ 3.47409436e-01 -7.60896825e-15]
      Node_24:
          x:    [100.   0.]
          fix:  ['uy']
          u:    [0.49629919 0.        ]
      Node_25:
          x:    [ 0. 16.]
          u:    [-6.99484238e-16 -1.99136226e-02]
      Node_26:
          x:    [15. 24.]
          u:    [ 0.07444488 -0.02987043]
      Node_27:
          x:    [50. 16.]
          u:    [ 0.2481496  -0.01991362]
      Node_28:
          x:    [80. 24.]
          u:    [ 0.39703936 -0.02987043]
      Node_29:
          x:    [100.  16.]
          u:    [ 0.49629919 -0.01991362]
      Node_30:
          x:    [ 0. 48.]
          u:    [ 4.51362115e-15 -5.97408678e-02]
      Node_31:
          x:    [20. 40.]
          u:    [ 0.09925984 -0.04978406]
      Node_32:
          x:    [70. 56.]
          u:    [ 0.34740944 -0.06969768]
      Node_33:
          x:    [90. 48.]
          u:    [ 0.44666927 -0.05974087]
      Node_34:
          x:    [100.  56.]
          u:    [ 0.49629919 -0.06969768]
      Node_35:
          x:    [ 0. 80.]
          u:    [ 3.76943857e-16 -9.95681131e-02]
      Node_36:
          x:    [30. 80.]
          u:    [ 0.14888976 -0.09956811]
      Node_37:
          x:    [55. 80.]
          u:    [ 0.27296456 -0.09956811]
      Node_38:
          x:    [80. 80.]
          u:    [ 0.39703936 -0.09956811]
      Node_39:
          x:    [100.  80.]
          u:    [ 0.49629919 -0.09956811]

    Elements:
    ---------------------
      Quad_24: nodes ( Node_20 Node_21 Node_26 Node_25 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=-2.070e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=-5.933e-13 xy=-1.656e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-1.668e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=5.898e-13 xy=-1.335e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-1.522e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=1.776e-12 xy=-1.218e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=7.617e-17 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=1.776e-12 xy=6.094e-13 zz=0.000e+00
      Quad_25: nodes ( Node_21 Node_22 Node_27 Node_26 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=1.146e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=4.146e-12 xy=9.166e-13 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=1.661e-17 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=5.898e-13 xy=1.329e-13 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-2.123e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-2.959e-12 xy=-1.699e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-3.489e-17 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=-5.933e-13 xy=-2.791e-13 zz=0.000e+00
      Quad_26: nodes ( Node_22 Node_23 Node_28 Node_27 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=1.586e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=1.776e-12 xy=1.269e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-6.285e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=7.695e-12 xy=-5.028e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=2.520e-17 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=5.898e-13 xy=2.016e-13 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-2.923e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=2.959e-12 xy=-2.339e-12 zz=0.000e+00
      Quad_27: nodes ( Node_23 Node_24 Node_29 Node_28 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=-2.677e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=-6.512e-12 xy=-2.141e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-7.906e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=-5.329e-12 xy=-6.324e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-2.833e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-1.776e-12 xy=-2.266e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-1.166e-17 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=5.933e-13 xy=-9.328e-14 zz=0.000e+00
      Quad_28: nodes ( Node_25 Node_26 Node_31 Node_30 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=1.452e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=-5.933e-13 xy=1.162e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=2.596e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=5.898e-13 xy=2.077e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-1.949e-17 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=5.898e-13 xy=-1.559e-13 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-1.367e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=2.959e-12 xy=-1.093e-12 zz=0.000e+00
      Quad_29: nodes ( Node_26 Node_27 Node_32 Node_31 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=-5.692e-17 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=5.933e-13 xy=-4.554e-13 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-1.845e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=-2.959e-12 xy=-1.476e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=2.767e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-6.512e-12 xy=2.214e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-1.386e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=1.776e-12 xy=-1.109e-12 zz=0.000e+00
      Quad_30: nodes ( Node_27 Node_28 Node_33 Node_32 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=8.076e-17 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=5.329e-12 xy=6.461e-13 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=2.449e-17 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=2.959e-12 xy=1.960e-13 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-5.378e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-1.776e-12 xy=-4.303e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=5.476e-17 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=5.329e-12 xy=4.381e-13 zz=0.000e+00
      Quad_31: nodes ( Node_28 Node_29 Node_34 Node_33 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=1.611e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=4.146e-12 xy=1.289e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=1.997e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=-5.933e-13 xy=1.598e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-9.159e-17 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-4.142e-12 xy=-7.327e-13 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=8.349e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=5.329e-12 xy=6.679e-12 zz=0.000e+00
      Quad_32: nodes ( Node_30 Node_31 Node_36 Node_35 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=-1.697e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=1.243e-11 xy=-1.358e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-9.474e-17 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=4.146e-12 xy=-7.579e-13 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-5.752e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=2.959e-12 xy=-4.602e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-3.859e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=2.959e-12 xy=-3.087e-12 zz=0.000e+00
      Quad_33: nodes ( Node_31 Node_32 Node_37 Node_36 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=3.477e-17 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=5.933e-13 xy=2.782e-13 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=3.334e-17 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=5.329e-12 xy=2.667e-13 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=3.715e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-5.933e-13 xy=2.972e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=9.277e-18 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=1.480e-11 xy=7.422e-14 zz=0.000e+00
      Quad_34: nodes ( Node_32 Node_33 Node_38 Node_37 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=1.533e-16 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=1.362e-11 xy=1.226e-12 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-3.942e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=-5.933e-13 xy=-3.153e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=-8.389e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=-4.142e-12 xy=-6.711e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-9.498e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=1.776e-12 xy=-7.599e-12 zz=0.000e+00
      Quad_35: nodes ( Node_33 Node_34 Node_39 Node_38 )
          material: list
          strain (0): xx=4.975e-03 yy=-1.244e-03 xy=-4.637e-17 zz=-9.329e-04
          stress (0): xx=9.951e+01 yy=-6.512e-12 xy=-3.709e-13 zz=0.000e+00
          strain (1): xx=4.975e-03 yy=-1.244e-03 xy=-2.224e-16 zz=-9.329e-04
          stress (1): xx=9.951e+01 yy=4.142e-12 xy=-1.779e-12 zz=0.000e+00
          strain (2): xx=4.975e-03 yy=-1.244e-03 xy=6.565e-16 zz=-9.329e-04
          stress (2): xx=9.951e+01 yy=4.146e-12 xy=5.252e-12 zz=0.000e+00
          strain (3): xx=4.975e-03 yy=-1.244e-03 xy=-9.645e-16 zz=-9.329e-04
          stress (3): xx=9.951e+01 yy=-1.362e-11 xy=-7.716e-12 zz=0.000e+00






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.612 seconds)


.. _sphx_glr_download_auto_examples_plates_plot_plate09.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_plate09.py <plot_plate09.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_plate09.ipynb <plot_plate09.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_


.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plates/plot_plate02_triangle_test2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plates_plot_plate02_triangle_test2.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plates_plot_plate02_triangle_test2.py:


===============================================================
A square patch made of two triangular plate elements
===============================================================

Basic implementation test with applied loads.
    Testing the tangent stiffness computation
    for a :func:`Triangle` (using linear shape functions).

Using

* :py:class:`elements.linear.Triangle` (see :ref:`triangle_class`)
* :py:class:`materials.PlaneStress`  (see :ref:`plane_stress_material_class`)

.. code::

    free   free
     ^     ^
     |     |
     3-----2 -> free
     |\  b | >
     | \   | >
     |  \  | > (w = 1.0)
     |   \ | >
     | a  \| >
     0-----1 -> free

    width:  10.
    height: 10.

    Material parameters: St. Venant-Kirchhoff, plane stress
        E  = 10.0
        nu =  0.30
        t  =  1.0

    Element loads:
        node 0: [ 0.0, 0.0]
        node 1: [ 5.0, 0.0]
        node 2: [ 5.0, 0.0]
        node 3: [ 0.0, 0.0]

    2nd Piola-Kirchhoff stress:
        S_XX =  w                  =  1.000
        S_YY = S_XY = S_YX = S_ZZ  =  0.000

    Green Lagrange strain:
        eps_XX = (1/E) ((1.000) - (0.30)(0.000)) =  0.100
        eps_YY = (1/E) ((0.000) - (0.30)(1.000)) = -0.030
        eps_XY = eps_YX                          =  0.000
        eps_ZZ = -nu * (eps_XX + eps_YY)         = -0.021

    Stretches:
        lam_X = sqrt(1 + 2 eps_XX) = 1.095
        lam_Y = sqrt(1 + 2 eps_YY) = 0.9695

    Displacements:
        ux = (lam_X - 1) * x, uy = (lam_Y - 1) * y
        node 0: [ 0.000,  0.000 ]
        node 1: [ 0.954,  0.000 ]
        node 2: [ 0.954, -0.305 ]
        node 3: [ 0.000, -0.305 ]

Author: Peter Mackenzie-Helnwein

.. GENERATED FROM PYTHON SOURCE LINES 65-126

.. code-block:: Python


    from femedu.examples import Example

    from femedu.domain import System, Node
    from femedu.solver import NewtonRaphsonSolver
    from femedu.elements.linear import Triangle
    from femedu.materials import PlaneStress


    class ExamplePlate02(Example):

        def problem(self):

            params = dict(
                E  = 10.,   # Young's modulus
                nu = 0.3,   # Poisson's ratio
                t  = 1.0,   # thickness of the plate
                fy = 1.e30  # yield stress
            )

            a = 10.     # length of the plate in the x-direction
            b = 10.     # length of the plate in the y-direction

            model = System()
            model.setSolver(NewtonRaphsonSolver())

            nd0 = Node( 0.0, 0.0)
            nd1 = Node(   a, 0.0)
            nd2 = Node(   a,   b)
            nd3 = Node( 0.0,   b)

            nd0.fixDOF('ux', 'uy')
            nd1.fixDOF('uy')
            nd3.fixDOF('ux')

            model.addNode(nd0, nd1, nd2, nd3)

            elemA = Triangle(nd0, nd1, nd3, PlaneStress(params))
            elemB = Triangle(nd2, nd3, nd1, PlaneStress(params))

            model.addElement(elemA, elemB)

            elemB.setSurfaceLoad(face=2, pn=1.0)

            model.setLoadFactor(0.0)
            model.solve()
            #model.report()  # activate this line for lots of debug info
            model.plot(factor=0.0, title="Undeformed system", filename="plate02_undeformed.png", show_bc=1)

            model.setLoadFactor(1.0)
            model.solve()
            model.plot(factor=1.0, filename="plate02_deformed.png")

            model.report()

            # requires femedu-1.0.25 or newer
            model.valuePlot('sxx', show_mesh=True)
            model.valuePlot('syy', show_mesh=True)
            model.valuePlot('sxy', show_mesh=True)









.. GENERATED FROM PYTHON SOURCE LINES 187-189

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 189-195

.. code-block:: Python


    if __name__ == "__main__":
        ex = ExamplePlate02()
        ex.run()





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_001.png
         :alt: Undeformed system
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_002.png
         :alt: Deformed System (magnification=1.00)
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_003.png
         :alt: Contours of '$\sigma_{xx}$'
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_004.png
         :alt: Contours of '$\sigma_{yy}$'
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_005.png
         :alt: Contours of '$\sigma_{xy}$'
         :srcset: /auto_examples/plates/images/sphx_glr_plot_plate02_triangle_test2_005.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    +
    /Users/pmackenz/Development/Educational/FEM.edu/venv/lib/python3.13/site-packages/matplotlib/quiver.py:678: RuntimeWarning: Mean of empty slice.
      amean = a.mean()
    /Users/pmackenz/Development/Educational/FEM.edu/venv/lib/python3.13/site-packages/numpy/_core/_methods.py:145: RuntimeWarning: invalid value encountered in scalar divide
      ret = ret.dtype.type(ret / rcount)
    +

    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_597:
          x:    [0.000 0.000]
          fix:  ['ux', 'uy']
          u:    [0.000 0.000]
      Node_598:
          x:    [10.000 0.000]
          fix:  ['uy']
          u:    [1.000 0.000]
      Node_599:
          x:    [10.000 10.000]
          u:    [1.000 -0.300]
      Node_600:
          x:    [0.000 10.000]
          fix:  ['ux']
          u:    [0.000 -0.300]

    Elements:
    ---------------------
      Triangle_834: nodes ( Node_597 Node_598 Node_600 )
          material: PlaneStress
          strain: xx=1.000e-01 yy=-3.000e-02 xy=0.000e+00 zz=-2.100e-02
          stress: xx=1.000e+00 yy=0.000e+00 xy=0.000e+00 zz=0.000e+00
      Triangle_835: nodes ( Node_599 Node_600 Node_598 )
          material: PlaneStress
          strain: xx=1.000e-01 yy=-3.000e-02 xy=1.776e-16 zz=-2.100e-02
          stress: xx=1.000e+00 yy=2.442e-15 xy=6.832e-16 zz=0.000e+00






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.092 seconds)


.. _sphx_glr_download_auto_examples_plates_plot_plate02_triangle_test2.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_plate02_triangle_test2.ipynb <plot_plate02_triangle_test2.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_plate02_triangle_test2.py <plot_plate02_triangle_test2.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_plate02_triangle_test2.zip <plot_plate02_triangle_test2.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

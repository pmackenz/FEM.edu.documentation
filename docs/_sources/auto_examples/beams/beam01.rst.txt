
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/beams/beam01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_beams_beam01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_beams_beam01.py:


======================================================
Single span beam under uniform load.
======================================================

The system is statically determined and allows for easy validation of
calculated deformation, reactions and internal forces.

Author: Peter Mackenzie-Helnwein

.. GENERATED FROM PYTHON SOURCE LINES 11-99

.. code-block:: default

    from femedu.examples.Example import *

    from femedu.domain.System import *
    from femedu.domain.Node import *
    from femedu.elements.Beam2D import *
    from femedu.materials.ElasticSection import *


    class ExampleBeam01(Example):

        def docString(self):
            s = """
            Single span beam under uniform load. 
        
            The system is statically determined and allows for easy validation of 
            calculated deformation, reactions and internal forces.
        
            Author: Peter Mackenzie-Helnwein 
            """
            return s

        def problem(self):
            # initialize a system model
            SpanLength = 10.0 * 12
            w =  -1.0   # distributed load (positive if acting in local y-direction
            P =   -40.0   # center point load (uses global system)

            Nelems = 4    # number of elements
            params = {'E': 29000., 'A': 4.7, 'I':103}

            model = System()

            # meshing parameters
            Le = SpanLength / Nelems
            Xnode = 0.0
            Ynode = 0.0

            # create left node
            nd0 = Node(Xnode, Ynode)
            model += nd0

            ndP = None

            # initialization for node and element creation
            ndi = nd0

            for e in range(Nelems):
                # create next node
                Xnode += Le
                ndj = Node(Xnode, Ynode)
                model += ndj

                # remember center node for loading
                if Xnode <= SpanLength/2:
                    ndP = ndj

                # create elements
                elem = Beam2D(ndi, ndj, ElasticSection(params))
                model += elem

                # load the element
                elem.setDistLoad(w)

                # shift one node to the right
                ndi = ndj

            # define support(s)
            nd0.fixDOF('ux', 'uy')     # pin support left end
            ndj.fixDOF('uy')           # roller support right end

            # add point loads
            # .. load only the center node
            if ndP:
                ndP.setLoad([0.0, P], ('ux', 'uy'))

            # analyze the model
            model.solve()

            # write out report
            model.report()

            # create plots
            model.plot(factor=10., filename="beam01_deformed.png", show_bc=1)

            model.beamValuePlot('V', filename="beam01_shear.png")
            model.beamValuePlot('M', filename="beam01_moment.png")



.. GENERATED FROM PYTHON SOURCE LINES 100-102

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 102-107

.. code-block:: default


    if __name__ == "__main__":
        ex = ExampleBeam01()
        ex.run()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_examples_beams_beam01.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: beam01.py <beam01.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: beam01.ipynb <beam01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

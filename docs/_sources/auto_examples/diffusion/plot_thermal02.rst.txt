
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/diffusion/plot_thermal02.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_diffusion_plot_thermal02.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_diffusion_plot_thermal02.py:


==========================================================
Heat transfer through a wall
==========================================================

This problem demonstrates the use of prescribed temperature
on both sides of the wall.

Using

* :py:class:`mesher.PatchMesher` (see :ref:`patch_mesher_class`)
* :py:class:`diffusion.Triangle` (see :ref:`diffusion_triangle_class`)
* :py:class:`materials.Thermal`  (see :ref:`diffusion_material_classes`)

Theory
---------
We shall consider a stationary heat transfer problem within a wall.
The inner surface of the wall, :math:`x=0~m`, is heated to :math:`200~K`,
the outer surface of the wall, :math:`x=10~m`, to :math:`300~K`.

The thermal equation for the uni-directional problem can be expressed as

.. math::
    \Delta T = \frac{\partial^2 T}{\partial r^2}  = 0

where :math:`\Delta` is the Laplace operator.

The analytic solution follows as

.. math::
    T(x) =  T_i \left(1-\frac{x}{L}\right)  + T_o \left(\frac{x}{L}\right)

This solution will be compared against the finite element solution in the last figure.

.. GENERATED FROM PYTHON SOURCE LINES 36-159

.. code-block:: Python

    import matplotlib.pyplot as plt

    import math
    import sys
    import numpy as np

    from femedu.examples.Example import *

    from femedu.domain import *
    from femedu.mesher import PatchMesher
    from femedu.elements.diffusion import Triangle
    from femedu.materials import Thermal


    class ExampleThermal02(Example):

        def problem(self):
            # ========== setting mesh parameters ==============

            Nx = 4  # number of elements through the wall
            Ny = 3  # number of elements parallel to the wall
            Lx = 10.00  # wall thickness in m
            Ly =  5.00  # wall thickness in m

            # ========== setting material parameters ==============

            params = dict(
                E=20000.,  # Young's modulus
                nu=0.250,  # Poisson's ratio
                t=1.00     # thickness of the plate
            )

            # ========== setting load parameters ==============

            qn = 1.00  # uniform flux normal to x=const

            # ========== setting analysis parameters ==============

            target_load_level = 1.00  # reference load
            max_steps = 2  # number of load steps: 2 -> [0.0, 1.0]

            # define a list of target load levels
            load_levels = np.linspace(0, target_load_level, max_steps)

            #
            # ==== Build the system model ====
            #

            model = System()

            # create nodes

            #  2 -------- 3
            #  |          |
            #  |          |
            #  |          |          |
            #  0 -------- 1

            pts = (
                ( 0,  0),  # 0
                (Lx,  0),  # 1
                ( 0, Ly),  # 2
                (Lx, Ly),  # 3
                (0.67*Lx, 0),   # 4
                (0.33*Lx, Ly),  # 5
            )

            mesher = PatchMesher(model, pts[0], pts[1], pts[3], pts[2], pts[4], None, pts[5], None)
            nodes, elements = mesher.triangleMesh(Nx, Ny, Triangle, Thermal(params))

            model.plot(factor=0.0,
                       title='Uni-directional diffusion',
                       show_reactions=0, show_bc=0, show_loads=0)

            model.report()

            # boundary condition(s)

            ## find nodes at y==0 and x==0

            for node in nodes:
                X = node.getPos()
                if math.isclose(X[0], 0.0):
                    node.setDOF(['T'],[200.])    # prescribed temperature at x=0.0
                if math.isclose(X[0], Lx):
                    node.setDOF(['T'],[300.])    # prescribed temperature at x=0.0

            # perform the analysis
            model.setLoadFactor(1.0)
            model.solve()

            model.report()

            model.valuePlot('T', show_mesh=True)
            model.valuePlot('Tx', show_mesh=True)
            model.valuePlot('qx', show_mesh=True)

            # creating a path plot

            R_list = []
            T_list = []

            for node in nodes:
                X = node.getPos()
                T = node.getDisp('T')
                R_list.append(X[0])
                T_list.append(T)

            # the analytic solution for comparison
            x = np.linspace(0, Lx, 21)
            T = 200. * (1 - x/Lx) + 300. * x/Lx

            fig, axs = plt.subplots()
            axs.plot(x,T,'-b',label="analytic solution")
            axs.plot(R_list,T_list,'ro',label="FEM")
            axs.set_title('Nodal Temperature for ALL Nodes')
            axs.set_xlabel("X distance")
            axs.set_ylabel('T')
            axs.legend()
            axs.grid(True)
            plt.show()









.. GENERATED FROM PYTHON SOURCE LINES 177-179

Run the example by creating an instance of the problem and executing it by calling :py:meth:`Example.run()`


.. GENERATED FROM PYTHON SOURCE LINES 179-183

.. code-block:: Python


    if __name__ == "__main__":
        ex = ExampleThermal02()
        ex.run()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_001.png
         :alt: Uni-directional diffusion
         :srcset: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_002.png
         :alt: Contours of 'T'
         :srcset: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_003.png
         :alt: Contours of '$\partial T/\partial{x}$'
         :srcset: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_004.png
         :alt: Contours of '$q_{x}$'
         :srcset: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_004.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_005.png
         :alt: Nodal Temperature for ALL Nodes
         :srcset: /auto_examples/diffusion/images/sphx_glr_plot_thermal02_005.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_236:
          x:    [0.000 0.000]
          u:    [0.000]
      Node_237:
          x:    [3.775 0.000]
          u:    [0.000]
      Node_238:
          x:    [6.700 0.000]
          u:    [0.000]
      Node_239:
          x:    [8.775 0.000]
          u:    [0.000]
      Node_240:
          x:    [10.000 0.000]
          u:    [0.000]
      Node_241:
          x:    [0.000 1.667]
          u:    [0.000]
      Node_242:
          x:    [2.925 1.667]
          u:    [0.000]
      Node_243:
          x:    [5.567 1.667]
          u:    [0.000]
      Node_244:
          x:    [7.925 1.667]
          u:    [0.000]
      Node_245:
          x:    [10.000 1.667]
          u:    [0.000]
      Node_246:
          x:    [0.000 3.333]
          u:    [0.000]
      Node_247:
          x:    [2.075 3.333]
          u:    [0.000]
      Node_248:
          x:    [4.433 3.333]
          u:    [0.000]
      Node_249:
          x:    [7.075 3.333]
          u:    [0.000]
      Node_250:
          x:    [10.000 3.333]
          u:    [0.000]
      Node_251:
          x:    [0.000 5.000]
          u:    [0.000]
      Node_252:
          x:    [1.225 5.000]
          u:    [0.000]
      Node_253:
          x:    [3.300 5.000]
          u:    [0.000]
      Node_254:
          x:    [6.225 5.000]
          u:    [0.000]
      Node_255:
          x:    [10.000 5.000]
          u:    [0.000]

    Elements:
    ---------------------
      Triangle_351: nodes ( Node_236 Node_237 Node_241 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_352: nodes ( Node_242 Node_241 Node_237 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_353: nodes ( Node_237 Node_238 Node_242 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_354: nodes ( Node_243 Node_242 Node_238 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_355: nodes ( Node_238 Node_239 Node_243 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_356: nodes ( Node_244 Node_243 Node_239 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_357: nodes ( Node_239 Node_240 Node_244 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_358: nodes ( Node_245 Node_244 Node_240 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_359: nodes ( Node_241 Node_242 Node_246 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_360: nodes ( Node_247 Node_246 Node_242 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_361: nodes ( Node_242 Node_243 Node_247 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_362: nodes ( Node_248 Node_247 Node_243 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_363: nodes ( Node_243 Node_244 Node_248 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_364: nodes ( Node_249 Node_248 Node_244 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_365: nodes ( Node_244 Node_245 Node_249 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_366: nodes ( Node_250 Node_249 Node_245 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_367: nodes ( Node_246 Node_247 Node_251 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_368: nodes ( Node_252 Node_251 Node_247 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_369: nodes ( Node_247 Node_248 Node_252 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_370: nodes ( Node_253 Node_252 Node_248 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_371: nodes ( Node_248 Node_249 Node_253 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_372: nodes ( Node_254 Node_253 Node_249 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_373: nodes ( Node_249 Node_250 Node_254 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00
      Triangle_374: nodes ( Node_255 Node_254 Node_250 )
          material: Thermal
          grad phi: x=0.000e+00 y=0.000e+00
          flux:     x=0.000e+00 y=0.000e+00


    System Analysis Report
    =======================

    Nodes:
    ---------------------
      Node_236:
          x:    [0.000 0.000]
          fix:  ['T']
          u:    [200.000]
      Node_237:
          x:    [3.775 0.000]
          u:    [237.750]
      Node_238:
          x:    [6.700 0.000]
          u:    [267.000]
      Node_239:
          x:    [8.775 0.000]
          u:    [287.750]
      Node_240:
          x:    [10.000 0.000]
          fix:  ['T']
          u:    [300.000]
      Node_241:
          x:    [0.000 1.667]
          fix:  ['T']
          u:    [200.000]
      Node_242:
          x:    [2.925 1.667]
          u:    [229.250]
      Node_243:
          x:    [5.567 1.667]
          u:    [255.667]
      Node_244:
          x:    [7.925 1.667]
          u:    [279.250]
      Node_245:
          x:    [10.000 1.667]
          fix:  ['T']
          u:    [300.000]
      Node_246:
          x:    [0.000 3.333]
          fix:  ['T']
          u:    [200.000]
      Node_247:
          x:    [2.075 3.333]
          u:    [220.750]
      Node_248:
          x:    [4.433 3.333]
          u:    [244.333]
      Node_249:
          x:    [7.075 3.333]
          u:    [270.750]
      Node_250:
          x:    [10.000 3.333]
          fix:  ['T']
          u:    [300.000]
      Node_251:
          x:    [0.000 5.000]
          fix:  ['T']
          u:    [200.000]
      Node_252:
          x:    [1.225 5.000]
          u:    [212.250]
      Node_253:
          x:    [3.300 5.000]
          u:    [233.000]
      Node_254:
          x:    [6.225 5.000]
          u:    [262.250]
      Node_255:
          x:    [10.000 5.000]
          fix:  ['T']
          u:    [300.000]

    Elements:
    ---------------------
      Triangle_351: nodes ( Node_236 Node_237 Node_241 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_352: nodes ( Node_242 Node_241 Node_237 )
          material: Thermal
          grad phi: x=1.000e+01 y=5.684e-14
          flux:     x=-1.000e+01 y=-5.684e-14
      Triangle_353: nodes ( Node_237 Node_238 Node_242 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_354: nodes ( Node_243 Node_242 Node_238 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_355: nodes ( Node_238 Node_239 Node_243 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_356: nodes ( Node_244 Node_243 Node_239 )
          material: Thermal
          grad phi: x=1.000e+01 y=-2.842e-14
          flux:     x=-1.000e+01 y=2.842e-14
      Triangle_357: nodes ( Node_239 Node_240 Node_244 )
          material: Thermal
          grad phi: x=1.000e+01 y=-2.842e-14
          flux:     x=-1.000e+01 y=2.842e-14
      Triangle_358: nodes ( Node_245 Node_244 Node_240 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_359: nodes ( Node_241 Node_242 Node_246 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_360: nodes ( Node_247 Node_246 Node_242 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_361: nodes ( Node_242 Node_243 Node_247 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_362: nodes ( Node_248 Node_247 Node_243 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_363: nodes ( Node_243 Node_244 Node_248 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_364: nodes ( Node_249 Node_248 Node_244 )
          material: Thermal
          grad phi: x=1.000e+01 y=-1.137e-13
          flux:     x=-1.000e+01 y=1.137e-13
      Triangle_365: nodes ( Node_244 Node_245 Node_249 )
          material: Thermal
          grad phi: x=1.000e+01 y=-1.137e-13
          flux:     x=-1.000e+01 y=1.137e-13
      Triangle_366: nodes ( Node_250 Node_249 Node_245 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_367: nodes ( Node_246 Node_247 Node_251 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_368: nodes ( Node_252 Node_251 Node_247 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_369: nodes ( Node_247 Node_248 Node_252 )
          material: Thermal
          grad phi: x=1.000e+01 y=-5.684e-14
          flux:     x=-1.000e+01 y=5.684e-14
      Triangle_370: nodes ( Node_253 Node_252 Node_248 )
          material: Thermal
          grad phi: x=1.000e+01 y=-2.842e-14
          flux:     x=-1.000e+01 y=2.842e-14
      Triangle_371: nodes ( Node_248 Node_249 Node_253 )
          material: Thermal
          grad phi: x=1.000e+01 y=-8.527e-14
          flux:     x=-1.000e+01 y=8.527e-14
      Triangle_372: nodes ( Node_254 Node_253 Node_249 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00
      Triangle_373: nodes ( Node_249 Node_250 Node_254 )
          material: Thermal
          grad phi: x=1.000e+01 y=2.842e-14
          flux:     x=-1.000e+01 y=-2.842e-14
      Triangle_374: nodes ( Node_255 Node_254 Node_250 )
          material: Thermal
          grad phi: x=1.000e+01 y=0.000e+00
          flux:     x=-1.000e+01 y=-0.000e+00






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.490 seconds)


.. _sphx_glr_download_auto_examples_diffusion_plot_thermal02.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_thermal02.ipynb <plot_thermal02.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_thermal02.py <plot_thermal02.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_thermal02.zip <plot_thermal02.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
